{"version":3,"sources":["webpack:///angular2-file-upload.js","webpack:///./components/file-upload/file-drop.ts?3484","webpack:///./components/file-upload/file-like-object.ts?a7a2","webpack:///./components/file-upload/file-select.ts?4587","webpack:///./components/file-upload/file-item.ts?6d55","webpack:///./components/file-upload/file-uploader.ts?ff92","webpack:///./ng2-file-upload.ts?80f3"],"names":["webpackJsonp",0,"module","exports","__webpack_require__",39,"__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","core_1","FileDrop","FileDrop.constructor","FileDrop.getOptions","FileDrop.onDrop","FileDrop.onDragOver","FileDrop.onDragLeave","FileDrop._getTransfer","FileDrop._preventAndStop","FileDrop._haveFiles","FileDrop._addOverClass","FileDrop._removeOverClass","ElementRef",40,"isElement","node","FileLikeObject","FileLikeObject.constructor","FileLikeObject._createFromFakePath","FileLikeObject._createFromObject",41,"FileSelect","FileSelect.constructor","FileSelect.getOptions","FileSelect.isEmptyAfterSelection","FileSelect.onChange","fileUpload",97,"file_like_object_1","FileItem","FileItem.constructor","FileItem.upload","FileItem.cancel","FileItem.remove","FileItem._onBeforeUpload","FileItem._onProgress","FileItem._onSuccess","FileItem._onError","FileItem._onCancel","FileItem._onComplete","FileItem._prepareToUploading",98,"isFile","value","file_item_1","FileUploader","FileUploader.constructor","FileUploader.addToQueue","FileUploader.removeFromQueue","FileUploader.clearQueue","FileUploader.uploadItem","FileUploader.cancelItem","FileUploader.uploadAll","FileUploader.cancelAll","FileUploader.isFile","FileUploader.isFileLikeObject","FileUploader.getIndexOfItem","FileUploader.getNotUploadedItems","FileUploader.getReadyItems","FileUploader._getTotalProgress","FileUploader._getFilters","FileUploader._folderFilter","FileUploader._queueLimitFilter","FileUploader._isValidFile","FileUploader._isSuccessCode","FileUploader._transformResponse","FileUploader._parseHeaders","FileUploader._headersGetter","FileUploader._xhrTransport","FileUploader._onWhenAddingFileFailed","FileUploader._onAfterAddingFile","FileUploader._onAfterAddingAll","FileUploader._onBeforeUploadItem","FileUploader._onProgressItem","FileUploader._onSuccessItem","FileUploader._onErrorItem","FileUploader._onCancelItem","FileUploader._onCompleteItem",99,"__export","m","p","hasOwnProperty","file_select_2","file_drop_2","FILE_UPLOAD_DIRECTIVES"],"mappings":"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","file":"angular2-file-upload.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(99);\n\n\n/***/ },\n\n/***/ 39:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar FileDrop = (function () {\n\t    function FileDrop(element) {\n\t        this.element = element;\n\t        this.fileOver = new core_1.EventEmitter();\n\t    }\n\t    FileDrop.prototype.getOptions = function () {\n\t        return this.uploader.options;\n\t    };\n\t    FileDrop.prototype.getFilters = function () {\n\t    };\n\t    FileDrop.prototype.onDrop = function (event) {\n\t        var transfer = this._getTransfer(event);\n\t        if (!transfer) {\n\t            return;\n\t        }\n\t        var options = this.getOptions();\n\t        var filters = this.getFilters();\n\t        this._preventAndStop(event);\n\t        this.uploader.addToQueue(transfer.files, options, filters);\n\t        this.fileOver.next(false);\n\t    };\n\t    FileDrop.prototype.onDragOver = function (event) {\n\t        var transfer = this._getTransfer(event);\n\t        if (!this._haveFiles(transfer.types)) {\n\t            return;\n\t        }\n\t        transfer.dropEffect = 'copy';\n\t        this._preventAndStop(event);\n\t        this.fileOver.next(true);\n\t    };\n\t    FileDrop.prototype.onDragLeave = function (event) {\n\t        if (event.currentTarget === this.element[0]) {\n\t            return;\n\t        }\n\t        this._preventAndStop(event);\n\t        this.fileOver.next(false);\n\t    };\n\t    FileDrop.prototype._getTransfer = function (event) {\n\t        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer;\n\t    };\n\t    FileDrop.prototype._preventAndStop = function (event) {\n\t        event.preventDefault();\n\t        event.stopPropagation();\n\t    };\n\t    FileDrop.prototype._haveFiles = function (types) {\n\t        if (!types) {\n\t            return false;\n\t        }\n\t        if (types.indexOf) {\n\t            return types.indexOf('Files') !== -1;\n\t        }\n\t        else if (types.contains) {\n\t            return types.contains('Files');\n\t        }\n\t        else {\n\t            return false;\n\t        }\n\t    };\n\t    FileDrop.prototype._addOverClass = function (item) {\n\t        item.addOverClass();\n\t    };\n\t    FileDrop.prototype._removeOverClass = function (item) {\n\t        item.removeOverClass();\n\t    };\n\t    FileDrop = __decorate([\n\t        core_1.Directive({\n\t            selector: '[ng2-file-drop]',\n\t            properties: ['uploader'],\n\t            events: ['fileOver'],\n\t            host: {\n\t                '(drop)': 'onDrop($event)',\n\t                '(dragover)': 'onDragOver($event)',\n\t                '(dragleave)': 'onDragLeave($event)'\n\t            }\n\t        }), \n\t        __metadata('design:paramtypes', [core_1.ElementRef])\n\t    ], FileDrop);\n\t    return FileDrop;\n\t})();\n\texports.FileDrop = FileDrop;\n\n\n/***/ },\n\n/***/ 40:\n/***/ function(module, exports) {\n\n\tfunction isElement(node) {\n\t    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n\t}\n\tvar FileLikeObject = (function () {\n\t    function FileLikeObject(fileOrInput) {\n\t        var isInput = isElement(fileOrInput);\n\t        var fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n\t        var postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n\t        var method = '_createFrom' + postfix;\n\t        this[method](fakePathOrObject);\n\t    }\n\t    FileLikeObject.prototype._createFromFakePath = function (path) {\n\t        this.lastModifiedDate = null;\n\t        this.size = null;\n\t        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n\t        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n\t    };\n\t    FileLikeObject.prototype._createFromObject = function (object) {\n\t        this.size = object.size;\n\t        this.type = object.type;\n\t        this.name = object.name;\n\t    };\n\t    return FileLikeObject;\n\t})();\n\texports.FileLikeObject = FileLikeObject;\n\n\n/***/ },\n\n/***/ 41:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar FileSelect = (function () {\n\t    function FileSelect(element) {\n\t        this.element = element;\n\t    }\n\t    FileSelect.prototype.getOptions = function () {\n\t        return this.uploader.options;\n\t    };\n\t    FileSelect.prototype.getFilters = function () {\n\t    };\n\t    FileSelect.prototype.isEmptyAfterSelection = function () {\n\t        return !!this.element.nativeElement.attributes.multiple;\n\t    };\n\t    FileSelect.prototype.onChange = function () {\n\t        var files = this.element.nativeElement.files;\n\t        var options = this.getOptions();\n\t        var filters = this.getFilters();\n\t        this.uploader.addToQueue(files, options, filters);\n\t        if (this.isEmptyAfterSelection()) {\n\t        }\n\t    };\n\t    FileSelect = __decorate([\n\t        core_1.Directive({\n\t            selector: '[ng2-file-select]',\n\t            properties: ['uploader'],\n\t            host: {\n\t                '(change)': 'onChange()'\n\t            }\n\t        }), \n\t        __metadata('design:paramtypes', [core_1.ElementRef])\n\t    ], FileSelect);\n\t    return FileSelect;\n\t})();\n\texports.FileSelect = FileSelect;\n\texports.fileUpload = [FileSelect];\n\n\n/***/ },\n\n/***/ 97:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar file_like_object_1 = __webpack_require__(40);\n\tvar FileItem = (function () {\n\t    function FileItem(uploader, some, options) {\n\t        this.uploader = uploader;\n\t        this.some = some;\n\t        this.options = options;\n\t        this.alias = 'file';\n\t        this.url = '/';\n\t        this.method = 'POST';\n\t        this.headers = [];\n\t        this.withCredentials = true;\n\t        this.formData = [];\n\t        this.isReady = false;\n\t        this.isUploading = false;\n\t        this.isUploaded = false;\n\t        this.isSuccess = false;\n\t        this.isCancel = false;\n\t        this.isError = false;\n\t        this.progress = 0;\n\t        this.index = null;\n\t        this.file = new file_like_object_1.FileLikeObject(some);\n\t        this._file = some;\n\t        this.url = uploader.url;\n\t    }\n\t    FileItem.prototype.upload = function () {\n\t        try {\n\t            this.uploader.uploadItem(this);\n\t        }\n\t        catch (e) {\n\t            this.uploader._onCompleteItem(this, '', 0, []);\n\t            this.uploader._onErrorItem(this, '', 0, []);\n\t        }\n\t    };\n\t    FileItem.prototype.cancel = function () {\n\t        this.uploader.cancelItem(this);\n\t    };\n\t    FileItem.prototype.remove = function () {\n\t        this.uploader.removeFromQueue(this);\n\t    };\n\t    FileItem.prototype.onBeforeUpload = function () {\n\t    };\n\t    FileItem.prototype.onProgress = function (progress) {\n\t    };\n\t    FileItem.prototype.onSuccess = function (response, status, headers) {\n\t    };\n\t    FileItem.prototype.onError = function (response, status, headers) {\n\t    };\n\t    FileItem.prototype.onCancel = function (response, status, headers) {\n\t    };\n\t    FileItem.prototype.onComplete = function (response, status, headers) {\n\t    };\n\t    FileItem.prototype._onBeforeUpload = function () {\n\t        this.isReady = true;\n\t        this.isUploading = true;\n\t        this.isUploaded = false;\n\t        this.isSuccess = false;\n\t        this.isCancel = false;\n\t        this.isError = false;\n\t        this.progress = 0;\n\t        this.onBeforeUpload();\n\t    };\n\t    FileItem.prototype._onProgress = function (progress) {\n\t        this.progress = progress;\n\t        this.onProgress(progress);\n\t    };\n\t    FileItem.prototype._onSuccess = function (response, status, headers) {\n\t        this.isReady = false;\n\t        this.isUploading = false;\n\t        this.isUploaded = true;\n\t        this.isSuccess = true;\n\t        this.isCancel = false;\n\t        this.isError = false;\n\t        this.progress = 100;\n\t        this.index = null;\n\t        this.onSuccess(response, status, headers);\n\t    };\n\t    FileItem.prototype._onError = function (response, status, headers) {\n\t        this.isReady = false;\n\t        this.isUploading = false;\n\t        this.isUploaded = true;\n\t        this.isSuccess = false;\n\t        this.isCancel = false;\n\t        this.isError = true;\n\t        this.progress = 0;\n\t        this.index = null;\n\t        this.onError(response, status, headers);\n\t    };\n\t    FileItem.prototype._onCancel = function (response, status, headers) {\n\t        this.isReady = false;\n\t        this.isUploading = false;\n\t        this.isUploaded = false;\n\t        this.isSuccess = false;\n\t        this.isCancel = true;\n\t        this.isError = false;\n\t        this.progress = 0;\n\t        this.index = null;\n\t        this.onCancel(response, status, headers);\n\t    };\n\t    FileItem.prototype._onComplete = function (response, status, headers) {\n\t        this.onComplete(response, status, headers);\n\t        if (this.uploader.removeAfterUpload) {\n\t            this.remove();\n\t        }\n\t    };\n\t    FileItem.prototype._prepareToUploading = function () {\n\t        this.index = this.index || ++this.uploader._nextIndex;\n\t        this.isReady = true;\n\t    };\n\t    return FileItem;\n\t})();\n\texports.FileItem = FileItem;\n\n\n/***/ },\n\n/***/ 98:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar file_like_object_1 = __webpack_require__(40);\n\tvar file_item_1 = __webpack_require__(97);\n\tfunction isFile(value) {\n\t    return (File && value instanceof File);\n\t}\n\tfunction isFileLikeObject(value) {\n\t    return value instanceof file_like_object_1.FileLikeObject;\n\t}\n\tvar FileUploader = (function () {\n\t    function FileUploader(options) {\n\t        this.options = options;\n\t        this.isUploading = false;\n\t        this.queue = [];\n\t        this.progress = 0;\n\t        this.autoUpload = false;\n\t        this.isHTML5 = true;\n\t        this.removeAfterUpload = false;\n\t        this._nextIndex = 0;\n\t        this.filters = [];\n\t        this.url = options.url;\n\t        this.authToken = options.authToken;\n\t        this.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n\t        this.filters.unshift({ name: 'folder', fn: this._folderFilter });\n\t    }\n\t    FileUploader.prototype.addToQueue = function (files, options, filters) {\n\t        var _this = this;\n\t        var list = [];\n\t        for (var _i = 0; _i < files.length; _i++) {\n\t            var file = files[_i];\n\t            list.push(file);\n\t        }\n\t        var arrayOfFilters = this._getFilters(filters);\n\t        var count = this.queue.length;\n\t        var addedFileItems = [];\n\t        list.map(function (some) {\n\t            var temp = new file_like_object_1.FileLikeObject(some);\n\t            if (_this._isValidFile(temp, [], options)) {\n\t                var fileItem = new file_item_1.FileItem(_this, some, options);\n\t                addedFileItems.push(fileItem);\n\t                _this.queue.push(fileItem);\n\t                _this._onAfterAddingFile(fileItem);\n\t            }\n\t            else {\n\t                var filter = arrayOfFilters[_this._failFilterIndex];\n\t                _this._onWhenAddingFileFailed(temp, filter, options);\n\t            }\n\t        });\n\t        if (this.queue.length !== count) {\n\t            this._onAfterAddingAll(addedFileItems);\n\t            this.progress = this._getTotalProgress();\n\t        }\n\t        this._render();\n\t        if (this.autoUpload) {\n\t            this.uploadAll();\n\t        }\n\t    };\n\t    FileUploader.prototype.removeFromQueue = function (value) {\n\t        var index = this.getIndexOfItem(value);\n\t        var item = this.queue[index];\n\t        if (item.isUploading) {\n\t            item.cancel();\n\t        }\n\t        this.queue.splice(index, 1);\n\t        this.progress = this._getTotalProgress();\n\t    };\n\t    FileUploader.prototype.clearQueue = function () {\n\t        while (this.queue.length) {\n\t            this.queue[0].remove();\n\t        }\n\t        this.progress = 0;\n\t    };\n\t    FileUploader.prototype.uploadItem = function (value) {\n\t        var index = this.getIndexOfItem(value);\n\t        var item = this.queue[index];\n\t        var transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\t        item._prepareToUploading();\n\t        if (this.isUploading) {\n\t            return;\n\t        }\n\t        this.isUploading = true;\n\t        this[transport](item);\n\t    };\n\t    FileUploader.prototype.cancelItem = function (value) {\n\t        var index = this.getIndexOfItem(value);\n\t        var item = this.queue[index];\n\t        var prop = this.isHTML5 ? '_xhr' : '_form';\n\t        if (item && item.isUploading) {\n\t            item[prop].abort();\n\t        }\n\t    };\n\t    FileUploader.prototype.uploadAll = function () {\n\t        var items = this.getNotUploadedItems().filter(function (item) { return !item.isUploading; });\n\t        if (!items.length) {\n\t            return;\n\t        }\n\t        items.map(function (item) { return item._prepareToUploading(); });\n\t        items[0].upload();\n\t    };\n\t    FileUploader.prototype.cancelAll = function () {\n\t        var items = this.getNotUploadedItems();\n\t        items.map(function (item) { return item.cancel(); });\n\t    };\n\t    FileUploader.prototype.isFile = function (value) {\n\t        return isFile(value);\n\t    };\n\t    FileUploader.prototype.isFileLikeObject = function (value) {\n\t        return value instanceof file_like_object_1.FileLikeObject;\n\t    };\n\t    FileUploader.prototype.getIndexOfItem = function (value) {\n\t        return typeof value === 'number' ? value : this.queue.indexOf(value);\n\t    };\n\t    FileUploader.prototype.getNotUploadedItems = function () {\n\t        return this.queue.filter(function (item) { return !item.isUploaded; });\n\t    };\n\t    FileUploader.prototype.getReadyItems = function () {\n\t        return this.queue\n\t            .filter(function (item) { return (item.isReady && !item.isUploading); })\n\t            .sort(function (item1, item2) { return item1.index - item2.index; });\n\t    };\n\t    FileUploader.prototype.destroy = function () {\n\t    };\n\t    FileUploader.prototype.onAfterAddingAll = function (fileItems) {\n\t    };\n\t    FileUploader.prototype.onAfterAddingFile = function (fileItem) {\n\t    };\n\t    FileUploader.prototype.onWhenAddingFileFailed = function (item, filter, options) {\n\t    };\n\t    FileUploader.prototype.onBeforeUploadItem = function (fileItem) {\n\t    };\n\t    FileUploader.prototype.onProgressItem = function (fileItem, progress) {\n\t    };\n\t    FileUploader.prototype.onProgressAll = function (progress) {\n\t    };\n\t    FileUploader.prototype.onSuccessItem = function (item, response, status, headers) {\n\t    };\n\t    FileUploader.prototype.onErrorItem = function (item, response, status, headers) {\n\t    };\n\t    FileUploader.prototype.onCancelItem = function (item, response, status, headers) {\n\t    };\n\t    FileUploader.prototype.onCompleteItem = function (item, response, status, headers) {\n\t    };\n\t    FileUploader.prototype.onCompleteAll = function () {\n\t    };\n\t    FileUploader.prototype._getTotalProgress = function (value) {\n\t        if (value === void 0) { value = 0; }\n\t        if (this.removeAfterUpload) {\n\t            return value;\n\t        }\n\t        var notUploaded = this.getNotUploadedItems().length;\n\t        var uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n\t        var ratio = 100 / this.queue.length;\n\t        var current = value * ratio / 100;\n\t        return Math.round(uploaded * ratio + current);\n\t    };\n\t    FileUploader.prototype._getFilters = function (filters) {\n\t        if (!filters) {\n\t            return this.filters;\n\t        }\n\t        if (Array.isArray(filters)) {\n\t            return filters;\n\t        }\n\t        var names = filters.match(/[^\\s,]+/g);\n\t        return this.filters\n\t            .filter(function (filter) { return names.indexOf(filter.name) !== -1; });\n\t    };\n\t    FileUploader.prototype._render = function () {\n\t    };\n\t    FileUploader.prototype._folderFilter = function (item) {\n\t        return !!(item.size || item.type);\n\t    };\n\t    FileUploader.prototype._queueLimitFilter = function () {\n\t        return this.queue.length < this.queueLimit;\n\t    };\n\t    FileUploader.prototype._isValidFile = function (file, filters, options) {\n\t        var _this = this;\n\t        this._failFilterIndex = -1;\n\t        return !filters.length ? true : filters.every(function (filter) {\n\t            _this._failFilterIndex++;\n\t            return filter.fn.call(_this, file, options);\n\t        });\n\t    };\n\t    FileUploader.prototype._isSuccessCode = function (status) {\n\t        return (status >= 200 && status < 300) || status === 304;\n\t    };\n\t    FileUploader.prototype._transformResponse = function (response, headers) {\n\t        return response;\n\t    };\n\t    FileUploader.prototype._parseHeaders = function (headers) {\n\t        var parsed = {}, key, val, i;\n\t        if (!headers) {\n\t            return parsed;\n\t        }\n\t        headers.split('\\n').map(function (line) {\n\t            i = line.indexOf(':');\n\t            key = line.slice(0, i).trim().toLowerCase();\n\t            val = line.slice(i + 1).trim();\n\t            if (key) {\n\t                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n\t            }\n\t        });\n\t        return parsed;\n\t    };\n\t    FileUploader.prototype._headersGetter = function (parsedHeaders) {\n\t        return function (name) {\n\t            if (name) {\n\t                return parsedHeaders[name.toLowerCase()] || null;\n\t            }\n\t            return parsedHeaders;\n\t        };\n\t    };\n\t    FileUploader.prototype._xhrTransport = function (item) {\n\t        var _this = this;\n\t        var xhr = item._xhr = new XMLHttpRequest();\n\t        var form = new FormData();\n\t        this._onBeforeUploadItem(item);\n\t        if (typeof item._file.size !== 'number') {\n\t            throw new TypeError('The file specified is no longer valid');\n\t        }\n\t        form.append(item.alias, item._file, item.file.name);\n\t        xhr.upload.onprogress = function (event) {\n\t            var progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n\t            _this._onProgressItem(item, progress);\n\t        };\n\t        xhr.onload = function () {\n\t            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n\t            var response = _this._transformResponse(xhr.response, headers);\n\t            var gist = _this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n\t            var method = '_on' + gist + 'Item';\n\t            _this[method](item, response, xhr.status, headers);\n\t            _this._onCompleteItem(item, response, xhr.status, headers);\n\t        };\n\t        xhr.onerror = function () {\n\t            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n\t            var response = _this._transformResponse(xhr.response, headers);\n\t            _this._onErrorItem(item, response, xhr.status, headers);\n\t            _this._onCompleteItem(item, response, xhr.status, headers);\n\t        };\n\t        xhr.onabort = function () {\n\t            var headers = _this._parseHeaders(xhr.getAllResponseHeaders());\n\t            var response = _this._transformResponse(xhr.response, headers);\n\t            _this._onCancelItem(item, response, xhr.status, headers);\n\t            _this._onCompleteItem(item, response, xhr.status, headers);\n\t        };\n\t        xhr.open(item.method, item.url, true);\n\t        xhr.withCredentials = item.withCredentials;\n\t        if (this.authToken) {\n\t            xhr.setRequestHeader('Authorization', this.authToken);\n\t        }\n\t        xhr.send(form);\n\t        this._render();\n\t    };\n\t    FileUploader.prototype._iframeTransport = function (item) {\n\t    };\n\t    FileUploader.prototype._onWhenAddingFileFailed = function (item, filter, options) {\n\t        this.onWhenAddingFileFailed(item, filter, options);\n\t    };\n\t    FileUploader.prototype._onAfterAddingFile = function (item) {\n\t        this.onAfterAddingFile(item);\n\t    };\n\t    FileUploader.prototype._onAfterAddingAll = function (items) {\n\t        this.onAfterAddingAll(items);\n\t    };\n\t    FileUploader.prototype._onBeforeUploadItem = function (item) {\n\t        item._onBeforeUpload();\n\t        this.onBeforeUploadItem(item);\n\t    };\n\t    FileUploader.prototype._onProgressItem = function (item, progress) {\n\t        var total = this._getTotalProgress(progress);\n\t        this.progress = total;\n\t        item._onProgress(progress);\n\t        this.onProgressItem(item, progress);\n\t        this.onProgressAll(total);\n\t        this._render();\n\t    };\n\t    FileUploader.prototype._onSuccessItem = function (item, response, status, headers) {\n\t        item._onSuccess(response, status, headers);\n\t        this.onSuccessItem(item, response, status, headers);\n\t    };\n\t    FileUploader.prototype._onErrorItem = function (item, response, status, headers) {\n\t        item._onError(response, status, headers);\n\t        this.onErrorItem(item, response, status, headers);\n\t    };\n\t    FileUploader.prototype._onCancelItem = function (item, response, status, headers) {\n\t        item._onCancel(response, status, headers);\n\t        this.onCancelItem(item, response, status, headers);\n\t    };\n\t    FileUploader.prototype._onCompleteItem = function (item, response, status, headers) {\n\t        item._onComplete(response, status, headers);\n\t        this.onCompleteItem(item, response, status, headers);\n\t        var nextItem = this.getReadyItems()[0];\n\t        this.isUploading = false;\n\t        if (nextItem) {\n\t            nextItem.upload();\n\t            return;\n\t        }\n\t        this.onCompleteAll();\n\t        this.progress = this._getTotalProgress();\n\t        this._render();\n\t    };\n\t    return FileUploader;\n\t})();\n\texports.FileUploader = FileUploader;\n\n\n/***/ },\n\n/***/ 99:\n/***/ function(module, exports, __webpack_require__) {\n\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(41));\n\t__export(__webpack_require__(39));\n\t__export(__webpack_require__(98));\n\tvar file_select_2 = __webpack_require__(41);\n\tvar file_drop_2 = __webpack_require__(39);\n\texports.FILE_UPLOAD_DIRECTIVES = [file_select_2.FileSelect, file_drop_2.FileDrop];\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** angular2-file-upload.js\n **/","import { Directive, EventEmitter, ElementRef } from 'angular2/core';\n\nimport { FileUploader } from './file-uploader';\n\n@Directive({\n  selector: '[ng2-file-drop]',\n  properties: ['uploader'],\n  events: ['fileOver'],\n  host: {\n    '(drop)': 'onDrop($event)',\n    '(dragover)': 'onDragOver($event)',\n    '(dragleave)': 'onDragLeave($event)'\n  }\n})\nexport class FileDrop {\n  public uploader:FileUploader;\n  private fileOver:EventEmitter<any> = new EventEmitter();\n\n  constructor(private element:ElementRef) {\n  }\n\n  getOptions() {\n    return this.uploader.options;\n  }\n\n  getFilters() {\n  }\n\n  onDrop(event:any) {\n    let transfer = this._getTransfer(event);\n    if (!transfer) {\n      return;\n    }\n\n    let options = this.getOptions();\n    let filters = this.getFilters();\n    this._preventAndStop(event);\n    this.uploader.addToQueue(transfer.files, options, filters);\n    this.fileOver.next(false);\n  }\n\n  onDragOver(event:any) {\n    let transfer = this._getTransfer(event);\n    if (!this._haveFiles(transfer.types)) {\n      return;\n    }\n\n    transfer.dropEffect = 'copy';\n    this._preventAndStop(event);\n    this.fileOver.next(true);\n  }\n\n  onDragLeave(event:any):any {\n    if (event.currentTarget === (<any>this).element[0]) {\n      return;\n    }\n\n    this._preventAndStop(event);\n    this.fileOver.next(false);\n  }\n\n  private _getTransfer(event:any):any {\n    return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n  }\n\n  private _preventAndStop(event:any):any {\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  private _haveFiles(types:any):any {\n    if (!types) {\n      return false;\n    }\n\n    if (types.indexOf) {\n      return types.indexOf('Files') !== -1;\n    } else if (types.contains) {\n      return types.contains('Files');\n    } else {\n      return false;\n    }\n  }\n\n  _addOverClass(item:any):any {\n    item.addOverClass();\n  }\n\n  _removeOverClass(item:any):any {\n    item.removeOverClass();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/file-upload/file-drop.ts\n **/","function isElement(node:any) {\n  return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\n\nexport class FileLikeObject {\n  public lastModifiedDate:any;\n  public size:any;\n  public type:string;\n  public name:string;\n\n  constructor(fileOrInput:any) {\n    let isInput = isElement(fileOrInput);\n    let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n    let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n    let method = '_createFrom' + postfix;\n    (<any>this)[method](fakePathOrObject);\n  }\n\n  public _createFromFakePath(path:string) {\n    this.lastModifiedDate = null;\n    this.size = null;\n    this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n    this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n  }\n\n  public _createFromObject(object:{size: number, type: string, name: string}) {\n    // this.lastModifiedDate = copy(object.lastModifiedDate);\n    this.size = object.size;\n    this.type = object.type;\n    this.name = object.name;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/file-upload/file-like-object.ts\n **/","import { Directive, ElementRef } from 'angular2/core';\n\nimport {FileUploader} from './file-uploader';\n\n// todo: filters\n\n@Directive({\n  selector: '[ng2-file-select]',\n  properties: ['uploader'],\n  host: {\n    '(change)': 'onChange()'\n  }\n})\nexport class FileSelect {\n  public uploader:FileUploader;\n\n  constructor(private element:ElementRef) {\n  }\n\n  public getOptions() {\n    return this.uploader.options;\n  }\n\n  public getFilters() {\n  }\n\n  public isEmptyAfterSelection():boolean {\n    return !!this.element.nativeElement.attributes.multiple;\n  }\n\n  onChange() {\n    // let files = this.uploader.isHTML5 ? this.element.nativeElement[0].files : this.element.nativeElement[0];\n    let files = this.element.nativeElement.files;\n    let options = this.getOptions();\n    let filters = this.getFilters();\n\n    // if(!this.uploader.isHTML5) this.destroy();\n\n    this.uploader.addToQueue(files, options, filters);\n    if (this.isEmptyAfterSelection()) {\n      // todo\n      // this.element.nativeElement.properties.value = '';\n      /*this.element.nativeElement\n       .replaceWith(this.element = this.element.nativeElement.clone(true)); // IE fix*/\n    }\n  }\n}\n\nexport const fileUpload:Array<any> = [FileSelect];\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/file-upload/file-select.ts\n **/","import {FileLikeObject} from './file-like-object';\nimport {FileUploader} from './file-uploader';\n\nexport class FileItem {\n  public file:FileLikeObject;\n  public _file:File;\n  public alias:string = 'file';\n  public url:string = '/';\n  public method:string = 'POST';\n  public headers:any = [];\n  public withCredentials:boolean = true;\n  public formData:any = [];\n  public isReady:boolean = false;\n  public isUploading:boolean = false;\n  public isUploaded:boolean = false;\n  public isSuccess:boolean = false;\n  public isCancel:boolean = false;\n  public isError:boolean = false;\n  public progress:number = 0;\n  public index:number = null;\n\n  constructor(private uploader:FileUploader, private some:any, private options:any) {\n    this.file = new FileLikeObject(some);\n    this._file = some;\n    this.url = uploader.url;\n  }\n\n  public upload() {\n    try {\n      this.uploader.uploadItem(this);\n    } catch (e) {\n      this.uploader._onCompleteItem(this, '', 0, []);\n      this.uploader._onErrorItem(this, '', 0, []);\n    }\n  }\n\n  public cancel() {\n    this.uploader.cancelItem(this);\n  }\n\n  public remove() {\n    this.uploader.removeFromQueue(this);\n  }\n\n  public onBeforeUpload() {\n  }\n\n  public onProgress(progress:number) {\n  }\n\n  public onSuccess(response:any, status:any, headers:any) {\n  }\n\n  public onError(response:any, status:any, headers:any) {\n  }\n\n  public onCancel(response:any, status:any, headers:any) {\n  }\n\n  public onComplete(response:any, status:any, headers:any) {\n  }\n\n  private _onBeforeUpload() {\n    this.isReady = true;\n    this.isUploading = true;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 0;\n    this.onBeforeUpload();\n  }\n\n  private _onProgress(progress:number) {\n    this.progress = progress;\n    this.onProgress(progress);\n  }\n\n  private _onSuccess(response:any, status:any, headers:any) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = true;\n    this.isCancel = false;\n    this.isError = false;\n    this.progress = 100;\n    this.index = null;\n    this.onSuccess(response, status, headers);\n  }\n\n  private _onError(response:any, status:any, headers:any) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = true;\n    this.isSuccess = false;\n    this.isCancel = false;\n    this.isError = true;\n    this.progress = 0;\n    this.index = null;\n    this.onError(response, status, headers);\n  }\n\n  private _onCancel(response:any, status:any, headers:any) {\n    this.isReady = false;\n    this.isUploading = false;\n    this.isUploaded = false;\n    this.isSuccess = false;\n    this.isCancel = true;\n    this.isError = false;\n    this.progress = 0;\n    this.index = null;\n    this.onCancel(response, status, headers);\n  }\n\n  private _onComplete(response:any, status:any, headers:any) {\n    this.onComplete(response, status, headers);\n\n    if (this.uploader.removeAfterUpload) {\n      this.remove();\n    }\n  }\n\n  private _prepareToUploading() {\n    this.index = this.index || ++this.uploader._nextIndex;\n    this.isReady = true;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/file-upload/file-item.ts\n **/","import {FileLikeObject} from './file-like-object';\nimport {FileItem} from './file-item';\n\nfunction isFile(value:any) {\n  return (File && value instanceof File);\n}\n\nfunction isFileLikeObject(value:any) {\n  return value instanceof FileLikeObject;\n}\n\nexport class FileUploader {\n  public url:string;\n  public authToken:string;\n  public isUploading:boolean = false;\n  public queue:Array<any> = [];\n  public progress:number = 0;\n  public autoUpload:boolean = false;\n  public isHTML5:boolean = true;\n  public removeAfterUpload:boolean = false;\n  public queueLimit:number;\n  public _nextIndex = 0;\n  public filters:Array<any> = [];\n  private _failFilterIndex:number;\n\n  constructor(public options:any) {\n    // Object.assign(this, options);\n    this.url = options.url;\n    this.authToken = options.authToken;\n    this.filters.unshift({name: 'queueLimit', fn: this._queueLimitFilter});\n    this.filters.unshift({name: 'folder', fn: this._folderFilter});\n  }\n\n  public addToQueue(files:any[], options:any, filters:any) {\n    let list:any[] = [];\n    for (let file of files) {\n      list.push(file);\n    }\n\n    let arrayOfFilters = this._getFilters(filters);\n    let count = this.queue.length;\n    let addedFileItems:any[] = [];\n\n    list.map(some => {\n      let temp = new FileLikeObject(some);\n\n      if (this._isValidFile(temp, [], options)) {\n        let fileItem = new FileItem(this, some, options);\n        addedFileItems.push(fileItem);\n        this.queue.push(fileItem);\n        this._onAfterAddingFile(fileItem);\n      } else {\n        let filter = arrayOfFilters[this._failFilterIndex];\n        this._onWhenAddingFileFailed(temp, filter, options);\n      }\n    });\n\n    if (this.queue.length !== count) {\n      this._onAfterAddingAll(addedFileItems);\n      this.progress = this._getTotalProgress();\n    }\n\n    this._render();\n\n    if (this.autoUpload) {\n      this.uploadAll();\n    }\n  }\n\n  public removeFromQueue(value:any) {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[index];\n    if (item.isUploading) {\n      item.cancel();\n    }\n\n    this.queue.splice(index, 1);\n    this.progress = this._getTotalProgress();\n  }\n\n  public clearQueue() {\n    while (this.queue.length) {\n      this.queue[0].remove();\n    }\n\n    this.progress = 0;\n  }\n\n  public uploadItem(value:FileItem) {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[index];\n    let transport = this.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n\n    item._prepareToUploading();\n    if (this.isUploading) {\n      return;\n    }\n\n    this.isUploading = true;\n    (<any>this)[transport](item);\n  }\n\n  public cancelItem(value:any) {\n    let index = this.getIndexOfItem(value);\n    let item = this.queue[index];\n    let prop = this.isHTML5 ? '_xhr' : '_form';\n\n    if (item && item.isUploading) {\n      item[prop].abort();\n    }\n  }\n\n  public uploadAll() {\n    let items = this.getNotUploadedItems().filter(item => !item.isUploading);\n    if (!items.length) {\n      return;\n    }\n\n    items.map(item => item._prepareToUploading());\n    items[0].upload();\n  }\n\n  public cancelAll() {\n    let items = this.getNotUploadedItems();\n    items.map(item => item.cancel());\n  }\n\n\n  public isFile(value:any) {\n    return isFile(value);\n  }\n\n  public isFileLikeObject(value:any) {\n    return value instanceof FileLikeObject;\n  }\n\n  public getIndexOfItem(value:any) {\n    return typeof value === 'number' ? value : this.queue.indexOf(value);\n  }\n\n  public getNotUploadedItems() {\n    return this.queue.filter(item => !item.isUploaded);\n  }\n\n  public getReadyItems() {\n    return this.queue\n      .filter(item => (item.isReady && !item.isUploading))\n      .sort((item1, item2) => item1.index - item2.index);\n  }\n\n  public destroy() {\n    /*forEach(this._directives, (key) => {\n     forEach(this._directives[key], (object) => {\n     object.destroy();\n     });\n     });*/\n  }\n\n  public onAfterAddingAll(fileItems:any) {\n  }\n\n  public onAfterAddingFile(fileItem:any) {\n  }\n\n  public onWhenAddingFileFailed(item:any, filter:any, options:any) {\n  }\n\n  public onBeforeUploadItem(fileItem:any) {\n  }\n\n  public onProgressItem(fileItem:any, progress:any) {\n  }\n\n  public onProgressAll(progress:any) {\n  }\n\n  public onSuccessItem(item:any, response:any, status:any, headers:any) {\n  }\n\n  public onErrorItem(item:any, response:any, status:any, headers:any) {\n  }\n\n  public onCancelItem(item:any, response:any, status:any, headers:any) {\n  }\n\n  public onCompleteItem(item:any, response:any, status:any, headers:any) {\n  }\n\n  public onCompleteAll() {\n  }\n\n  private _getTotalProgress(value = 0) {\n    if (this.removeAfterUpload) {\n      return value;\n    }\n\n    let notUploaded = this.getNotUploadedItems().length;\n    let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n    let ratio = 100 / this.queue.length;\n    let current = value * ratio / 100;\n\n    return Math.round(uploaded * ratio + current);\n  }\n\n  private _getFilters(filters:any) {\n    if (!filters) {\n      return this.filters;\n    }\n\n    if (Array.isArray(filters)) {\n      return filters;\n    }\n\n    let names = filters.match(/[^\\s,]+/g);\n    return this.filters\n      .filter(filter => names.indexOf(filter.name) !== -1);\n  }\n\n  private _render() {\n    // todo: ?\n  }\n\n  private _folderFilter(item:any) {\n    return !!(item.size || item.type);\n  }\n\n  private _queueLimitFilter() {\n    return this.queue.length < this.queueLimit;\n  }\n\n  private _isValidFile(file:any, filters:any, options:any) {\n    this._failFilterIndex = -1;\n    return !filters.length ? true : filters.every((filter:any) => {\n      this._failFilterIndex++;\n      return filter.fn.call(this, file, options);\n    });\n  }\n\n  private _isSuccessCode(status:any) {\n    return (status >= 200 && status < 300) || status === 304;\n  }\n\n  private _transformResponse(response:any, headers:any):any {\n    // todo: ?\n    /*var headersGetter = this._headersGetter(headers);\n     forEach($http.defaults.transformResponse, (transformFn) => {\n     response = transformFn(response, headersGetter);\n     });*/\n    return response;\n  }\n\n  private _parseHeaders(headers:any) {\n    let parsed:any = {}, key:any, val:any, i:any;\n\n    if (!headers) {\n      return parsed;\n    }\n\n    headers.split('\\n').map((line:any) => {\n      i = line.indexOf(':');\n      key = line.slice(0, i).trim().toLowerCase();\n      val = line.slice(i + 1).trim();\n\n      if (key) {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    });\n\n    return parsed;\n  }\n\n  private _headersGetter(parsedHeaders:any) {\n    return (name:any) => {\n      if (name) {\n        return parsedHeaders[name.toLowerCase()] || null;\n      }\n      return parsedHeaders;\n    };\n  }\n\n  _xhrTransport(item:any) {\n    let xhr = item._xhr = new XMLHttpRequest();\n    let form = new FormData();\n\n    this._onBeforeUploadItem(item);\n\n    // todo\n    /*item.formData.map(obj => {\n     obj.map((value, key) => {\n     form.append(key, value);\n     });\n     });*/\n\n    if (typeof item._file.size !== 'number') {\n      throw new TypeError('The file specified is no longer valid');\n    }\n\n    form.append(item.alias, item._file, item.file.name);\n\n    xhr.upload.onprogress = (event) => {\n      let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n      this._onProgressItem(item, progress);\n    };\n\n    xhr.onload = () => {\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n      let method = '_on' + gist + 'Item';\n      (<any>this)[method](item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n\n    xhr.onerror = () => {\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      this._onErrorItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n\n    xhr.onabort = () => {\n      let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n      let response = this._transformResponse(xhr.response, headers);\n      this._onCancelItem(item, response, xhr.status, headers);\n      this._onCompleteItem(item, response, xhr.status, headers);\n    };\n\n    xhr.open(item.method, item.url, true);\n    xhr.withCredentials = item.withCredentials;\n\n    // todo\n    /*item.headers.map((value, name) => {\n     xhr.setRequestHeader(name, value);\n     });*/\n\n    if (this.authToken) {\n      xhr.setRequestHeader('Authorization', this.authToken);\n    }\n\n    xhr.send(form);\n    this._render();\n  }\n\n  private _iframeTransport(item:any) {\n    // todo: implement it later\n  }\n\n  private _onWhenAddingFileFailed(item:any, filter:any, options:any) {\n    this.onWhenAddingFileFailed(item, filter, options);\n  }\n\n  private _onAfterAddingFile(item:any) {\n    this.onAfterAddingFile(item);\n  }\n\n  private _onAfterAddingAll(items:any) {\n    this.onAfterAddingAll(items);\n  }\n\n  private _onBeforeUploadItem(item:any) {\n    item._onBeforeUpload();\n    this.onBeforeUploadItem(item);\n  }\n\n  private _onProgressItem(item:any, progress:any) {\n    let total = this._getTotalProgress(progress);\n    this.progress = total;\n    item._onProgress(progress);\n    this.onProgressItem(item, progress);\n    this.onProgressAll(total);\n    this._render();\n  }\n\n  private _onSuccessItem(item:any, response:any, status:any, headers:any) {\n    item._onSuccess(response, status, headers);\n    this.onSuccessItem(item, response, status, headers);\n  }\n\n  public _onErrorItem(item:any, response:any, status:any, headers:any) {\n    item._onError(response, status, headers);\n    this.onErrorItem(item, response, status, headers);\n  }\n\n  private _onCancelItem(item:any, response:any, status:any, headers:any) {\n    item._onCancel(response, status, headers);\n    this.onCancelItem(item, response, status, headers);\n  }\n\n  public _onCompleteItem(item:any, response:any, status:any, headers:any) {\n    item._onComplete(response, status, headers);\n    this.onCompleteItem(item, response, status, headers);\n\n    let nextItem = this.getReadyItems()[0];\n    this.isUploading = false;\n\n    if (nextItem) {\n      nextItem.upload();\n      return;\n    }\n\n    this.onCompleteAll();\n    this.progress = this._getTotalProgress();\n    this._render();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./components/file-upload/file-uploader.ts\n **/","export * from  './components/file-upload/file-select';\nexport * from  './components/file-upload/file-drop';\nexport * from  './components/file-upload/file-uploader';\n\nimport {FileSelect} from './components/file-upload/file-select';\nimport {FileDrop} from './components/file-upload/file-drop';\n\nexport const FILE_UPLOAD_DIRECTIVES:[any] = [FileSelect, FileDrop];\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng2-file-upload.ts\n **/"],"sourceRoot":""}